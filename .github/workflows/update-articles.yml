name: 自动更新文章与网站地图

on:
  schedule:
    # 每天凌晨2点运行（UTC时间为18:00，北京时间+8小时为凌晨2:00）
    - cron: '0 18 * * *'
  # 允许手动触发工作流
  workflow_dispatch:

jobs:
  update-articles:
    runs-on: ubuntu-latest
    steps:
      - name: 检出代码
        uses: actions/checkout@v2
        with:
          # 确保获取完整的历史记录，以便正确处理文件
          fetch-depth: 0
        
      - name: 设置Python环境
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
          
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install Pillow  # 安装PIL/Pillow图像处理库
          pip install -r requirements.txt  # 安装所有依赖
          # 验证PIL是否正确安装
          python -c "from PIL import Image, ImageDraw, ImageFont; print('PIL正确安装')"
          
      - name: 检查环境和目录结构
        run: |
          echo "当前工作目录: $(pwd)"
          echo "目录内容:"
          ls -la
          echo "Python版本: $(python --version)"
          echo "系统信息: $(uname -a)"
          echo "articles目录内容:"
          ls -la articles/
          echo "images目录内容:"
          if [ -d "images" ]; then
            ls -la images/
          else
            echo "images目录不存在，将自动创建"
          fi
          echo "备份目录内容:"
          if [ -d "articles_backup" ]; then
            ls -la articles_backup/
          else
            echo "articles_backup目录不存在，将自动创建"
          fi
          
      - name: 运行更新脚本
        run: |
          set -x  # 显示执行的每个命令
          # 查看auto_update_articles.py中的导入语句
          grep "import" auto_update_articles.py
          # 运行脚本并捕获所有输出
          python auto_update_articles.py 2>&1
          
      - name: 确保sitemap更新
        run: |
          python update_sitemap.py
          
      - name: 提交更改
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add .
          git diff --staged --quiet || git commit -m "自动更新文章和sitemap [$(date +'%Y-%m-%d')]"
          
      - name: 推送更改
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} 
